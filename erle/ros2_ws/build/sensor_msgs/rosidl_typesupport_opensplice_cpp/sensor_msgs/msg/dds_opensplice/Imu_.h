//******************************************************************
// 
//  Generated by IDL to C++ Translator
//  
//  File name: Imu_.h
//  Source: /home/erle/ros2_ws/build/sensor_msgs/rosidl_generator_dds_idl/sensor_msgs/msg/dds_opensplice/Imu_.idl
//  Generated: Sun Nov  8 00:04:14 2015
//  OpenSplice V6.4.140407OSS
//  
//******************************************************************
#ifndef _IMU__H_
#define _IMU__H_

#include "sacpp_mapping.h"
#include "sacpp_DDS_DCPS.h"
#include "Vector3_.h"
#include "Quaternion_.h"
#include "dds_dcps.h"
#include "Header_.h"


namespace sensor_msgs
{
   namespace msg
   {
      namespace dds_
      {
         struct Imu_;
         typedef DDS::Double sensor_msgs__Imu__double_array_9_slice;
         typedef DDS::Double sensor_msgs__Imu__double_array_9[9];
         typedef sensor_msgs__Imu__double_array_9 sensor_msgs__Imu__double_array_9_out;
         extern sensor_msgs__Imu__double_array_9_slice * sensor_msgs__Imu__double_array_9_alloc ();
         extern void sensor_msgs__Imu__double_array_9_free (sensor_msgs__Imu__double_array_9_slice *);
         extern void sensor_msgs__Imu__double_array_9_copy (sensor_msgs__Imu__double_array_9_slice* to, const sensor_msgs__Imu__double_array_9_slice* from);
         extern sensor_msgs__Imu__double_array_9_slice *sensor_msgs__Imu__double_array_9_dup (const sensor_msgs__Imu__double_array_9_slice* from);

         struct sensor_msgs__Imu__double_array_9_uniq_ {};
         typedef DDS_DCPS_FArray_var< sensor_msgs__Imu__double_array_9, sensor_msgs__Imu__double_array_9_slice, struct sensor_msgs__Imu__double_array_9_uniq_> sensor_msgs__Imu__double_array_9_var;
         typedef DDS_DCPS_Array_forany< sensor_msgs__Imu__double_array_9, sensor_msgs__Imu__double_array_9_slice, struct sensor_msgs__Imu__double_array_9_uniq_> sensor_msgs__Imu__double_array_9_forany;

         struct Imu_
         {
               ::std_msgs::msg::dds_::Header_ header_;
               ::geometry_msgs::msg::dds_::Quaternion_ orientation_;
               sensor_msgs__Imu__double_array_9 orientation_covariance_;
               ::geometry_msgs::msg::dds_::Vector3_ angular_velocity_;
               sensor_msgs__Imu__double_array_9 angular_velocity_covariance_;
               ::geometry_msgs::msg::dds_::Vector3_ linear_acceleration_;
               sensor_msgs__Imu__double_array_9 linear_acceleration_covariance_;
         };

         typedef DDS_DCPSStruct_var < Imu_> Imu__var;
         typedef DDS_DCPSStruct_out < Imu_> Imu__out;
      }
   }
}
template <>
sensor_msgs::msg::dds_::sensor_msgs__Imu__double_array_9_slice* DDS_DCPS_ArrayHelper < sensor_msgs::msg::dds_::sensor_msgs__Imu__double_array_9, sensor_msgs::msg::dds_::sensor_msgs__Imu__double_array_9_slice, sensor_msgs::msg::dds_::sensor_msgs__Imu__double_array_9_uniq_>::alloc ();
template <>
void DDS_DCPS_ArrayHelper < sensor_msgs::msg::dds_::sensor_msgs__Imu__double_array_9, sensor_msgs::msg::dds_::sensor_msgs__Imu__double_array_9_slice, sensor_msgs::msg::dds_::sensor_msgs__Imu__double_array_9_uniq_>::copy (sensor_msgs::msg::dds_::sensor_msgs__Imu__double_array_9_slice *to, const sensor_msgs::msg::dds_::sensor_msgs__Imu__double_array_9_slice* from);
template <>
void DDS_DCPS_ArrayHelper < sensor_msgs::msg::dds_::sensor_msgs__Imu__double_array_9, sensor_msgs::msg::dds_::sensor_msgs__Imu__double_array_9_slice, sensor_msgs::msg::dds_::sensor_msgs__Imu__double_array_9_uniq_>::free (sensor_msgs::msg::dds_::sensor_msgs__Imu__double_array_9_slice *ptr);




#endif 
